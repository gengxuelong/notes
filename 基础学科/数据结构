# 数据结构

数据的逻辑结构，数据的储存结构，定义在其上的运算集合

#### 四种基本数据结构

集合结构，线性结构，树型结构，网状结构

### 线性结构：

#### 1. 线性表

- 介绍线性表的抽象数据类型的定义

- 顺序储存结构
- 链式存储结构，

- 定义在其上的运算
  - 一元多项式的表示和相加
  - 顺序表与链表的总和比较

#### 2.1.1 线性表的定义

线性表：linear list / linear table

> 在一个数据表中,列为数据项，
>
> 行为“记录”

线性表是具有相同数据类型的n个数据元素的有限序列。其中n为表长，当n为零是，线性表为空表，一般用L命名线性表。其一般表达式为：

L = {a1,a2,...,ai,ai+1,...,an}

a3 相对于a2来说,...... **直接前驱，直接后继**

除整数第一倒数第一外，每个元素只有一个直接前驱和直接后继

**<u>线性表必须是相同的数据类型</u>**

##### 线性表的特点

- 同一性
- 有穷性
- 有序性

##### 线性表的抽象数据类型

1. 数据元素
2. 结构关系
3. 基本操作

![](D:\截图\数据结构\4.png)

##### 顺序存储结构的定义：

用一组地址连续的储存单元依次储存线性表中的各个元素。使得线性表中在逻辑结构上相邻的数据元素存储在相邻的物理存储单元中。

计算公式： 

Loc(ai) = Loc(a1)+(i-1)*k;

Loc(a1) 成为基地址

C语言实现：

> define MAXSIZE 100
>
> typedef struct
>
> {
>
>  ElementType  elem[MAXSIZE];/数组储存数据元素
>
> int last;//为表尾指示器
>
> }SeqList;

注意： 区分元素中的序号和数组的下标，序号= 下标+1

#### 2.2.2顺序储存结构上的基本运算

1. ##### 查找操作

- 按序号查找，
- 按内容查找

> 对于顺序存储结构的线性表：
>
> 按序号查找更加高效

查找操作2：

在线性表中找出元素e

先找出元素e的序号，在使用第一种查找

```C
int Locate(SeqList L ,ElemType e){
	int i = 0;
	while(i<=L.last && L.elem[i] != e){
	i++;
	}
	if(i<=L.last)
		return i+1;
	else 
		return -1;
}
```

##### 插入操作：

![](D:\截图\数据结构\5.png)

###### 顺序合并算法

![](D:\截图\数据结构\6.png)

###### 顺序储存结构的优缺点分析：

- 优点
  - 

- 缺点

![](D:\截图\数据结构\7.png)

#### 线性表的链式存储结构

单链表，单链表上的操作

##### 链表定义：

曹勇链式存储结构的线性表称为链表

##### 单链表：

每个结点只有一个指针域和大数据域

存储数据元素的直接后继的地址

###### 头结点：

头结点不存数据，用来代表这个链表

```c
typedef struct Node
{
	ElemTyoe data;
    struct Node *nextl;
}Node,*LinkList;
有两个别称：Node用来定义一般节点，* Link List用来定义头结点
```

#### 基本运算：

##### 求单链表的长度

######  尾插入，

###### 头插入

##### 线性表的顺序储存结构：

- 优点：
  - 无需为表示表中的元素之前的逻辑关系，增加额外的储存空间
  - 可以快速的存取表中任意位置的元素

- 缺点



##### 链式存储

### 头插法建表：



### 按序号查找

### 按值查找

返回首次找到的其值为W的 Node位置



#### 循环链表。

是一个首位相连的链表

### 静态链表

采用数据模拟的方式实现链表

基本特征：

存储池，结点结构，游标机制
